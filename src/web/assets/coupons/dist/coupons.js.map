{"version":3,"file":"coupons.js","mappings":"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","sources":["webpack:///./js/coupons.js"],"sourcesContent":["if (typeof Craft.Commerce === typeof undefined) {\n  Craft.Commerce = {};\n}\n\nCraft.Commerce.Coupons = Garnish.Base.extend(\n  {\n    couponBtnSelector: null,\n    couponTable: null,\n\n    tempTableId: null,\n\n    $couponsBtn: null,\n    $couponsContainer: null,\n    $generateBtn: null,\n    $slideout: null,\n    $slideoutContents: null,\n\n\n    init(couponBtnSelector, settings) {\n      this.couponBtnSelector = couponBtnSelector;\n      this.setSettings(settings, Craft.Commerce.Coupons.defaults);\n\n      this.$couponsBtn = document.querySelector(this.couponBtnSelector);\n\n      this.$couponsContainer = document.querySelector(this.settings.couponsContainerSelector);\n      this.$couponsContainerInner = document.querySelector(this.settings.couponsContainerInnerSelector);\n      this.$slideoutContents = this.$couponsContainer.cloneNode(true);\n\n      this.tempTableId = this.$slideoutContents.querySelector('table.editable').id\n      this.$slideoutContents.querySelector('table.editable').id = this.settings.tableSlideoutId;\n\n      this.$generateBtn = this.$slideoutContents.querySelector(this.settings.generateBtnSelector);\n\n      this._addListeners();\n    },\n\n    _addListeners() {\n      this.addListener(this.$couponsBtn, 'click', 'openSlideout');\n      this.addListener(this.$generateBtn, 'click', 'generateCoupons');\n    },\n\n    openSlideout(ev) {\n      ev.preventDefault();\n\n      this.$slideout = new Craft.Slideout(this.$slideoutContents, {\n        autoOpen: false,\n        containerElement: 'form',\n        containerAttributes: {\n          action: '',\n          method: 'post',\n          novalidate: '',\n          class: 'coupon-editor',\n        },\n      });\n\n      this.$slideout.on('open', () => {\n        setTimeout(function() {\n          this.couponTable = new Craft.EditableTable(this.settings.tableSlideoutId, this.settings.table.name, this.settings.table.cols, {\n            defaultValues: this.settings.table.defaultValues,\n            staticRows: false,\n            minRows: null,\n            allowAdd: true,\n            allowDelete: true,\n            maxRows: null,\n            onDeleteRow: this.onDeleteCoupon\n          });\n        }.bind(this), 300);\n      });\n\n      this.$slideout.on('close', () => {\n        this.$slideoutContents.querySelector(`#${this.settings.tableSlideoutId}`).id = this.tempTableId;\n        this.$couponsContainer.replaceChild(this.$slideoutContents.querySelector(this.settings.couponsContainerInnerSelector), this.$couponsContainerInner);\n        this.$slideout.destroy();\n      });\n\n      this.$slideout.open();\n    },\n\n    generateCoupons(ev) {\n      ev.preventDefault();\n\n      Craft.postActionRequest('commerce/discounts/generate-coupons', this.getGenerateData(), (response, status) => {\n        if (status !== 'success') {\n          console.log('throw an error');\n          return;\n        }\n\n        this.appendCoupons(response.coupons);\n      });\n    },\n\n    appendCoupons(coupons) {\n      if (!coupons || !coupons.length) {\n        return;\n      }\n\n      console.log(this.couponTable, this.couponTable.$addRowBtn);\n      console.log(this.couponTable.$table, this.couponTable.$addRowBtn);\n      const row = this.couponTable.addRow(false);\n      row.$tr.find('.singleline-cell:first textarea').val('testing');\n    },\n\n    getGenerateData() {\n      if (!this.$slideoutContents) {\n        return {};\n      }\n\n      const $countField = this.$slideoutContents.querySelector('input[name=count]');\n      const $lengthField = this.$slideoutContents.querySelector('input[name=length]');\n      return {\n        count: $countField.value,\n        length: $lengthField.value,\n      };\n    },\n\n    onDeleteCoupon(id) {\n      // prevent deletion of coupons that have been used\n      console.log(id);\n    }\n  },\n  {\n    defaults: {\n      couponsContainerInnerSelector: '#commerce-coupons-inner',\n      couponsContainerSelector: '#commerce-coupons',\n      generateSelectors: {\n        count: 'input[name=count]',\n        length: 'input[name=length]',\n      },\n      table: {},\n      tableId: 'coupons-table',\n      tableSlideoutId: 'slideout-coupons',\n    }\n  });\n"],"names":["Craft","Commerce","Coupons","Garnish","Base","extend","couponBtnSelector","couponTable","tempTableId","$couponsBtn","$couponsContainer","$generateBtn","$slideout","$slideoutContents","init","settings","this","setSettings","defaults","document","querySelector","couponsContainerSelector","$couponsContainerInner","couponsContainerInnerSelector","cloneNode","id","tableSlideoutId","generateBtnSelector","_addListeners","addListener","openSlideout","ev","preventDefault","Slideout","autoOpen","containerElement","containerAttributes","action","method","novalidate","class","on","setTimeout","EditableTable","table","name","cols","defaultValues","staticRows","minRows","allowAdd","allowDelete","maxRows","onDeleteRow","onDeleteCoupon","bind","replaceChild","destroy","open","generateCoupons","postActionRequest","getGenerateData","response","status","appendCoupons","coupons","console","log","length","$addRowBtn","$table","addRow","$tr","find","val","$countField","$lengthField","count","value","generateSelectors","tableId"],"sourceRoot":""}